services:
  receiver:
    build:
      context: receiver
      dockerfile: Dockerfile
    depends_on:
      - kafka
    ports:
      - "8080:8080"
  storage:
    build:
      context: storage
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - db
  processing:
    build:
      context: processing
      dockerfile: Dockerfile
    depends_on:
      - storage
    ports:
      - "8100:8100"
  analyzer:
    build:
      context: analyzer
      dockerfile: Dockerfile
    depends_on:
      - kafka
    ports:
      - "8120:8120"
  db:
    image: mysql
    container_name: 3855_database
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 28cjo$9*khgusj
      MYSQL_USER: Ian_admin
      MYSQL_PASSWORD: helpme
      MYSQL_DATABASE: 3855_project
    volumes:
      - my-db:/var/lib/mysql

  zookeeper:
    image: wurstmeister/zookeeper
    hostname: zookeeper
    restart: unless-stopped
  
  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    restart: unless-stopped
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: kafka # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://host.docker.internal:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "zookeeper"

volumes:
  my-db: